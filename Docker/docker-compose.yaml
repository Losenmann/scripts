version: "3.7"
networks:
  net-proxy:
    name: 'net-proxy'
    driver: 'bridge'
  net-zabbix:
    name: 'net-zabbix'
    driver: 'bridge'
    ipam:
      config:
        - subnet: '172.18.1.0/16'
          gateway: '172.18.1.1'

services:
  nginx-proxy:
    container_name: 'nginx-proxy'
    image: 'jwilder/nginx-proxy'
    networks:
      - 'net-proxy'
    ports:
      - '80:80'
      - '443:443'
    volumes:
      - '/var/run/docker.sock:/tmp/docker.sock:ro'
      - '~/local-certs:/etc/nginx/certs'
    restart: always

  portainer:
    container_name: 'Portainer'
    image: 'portainer/portainer-ce'
    networks:
      - 'net-proxy'
    expose:
      - '9000'
    volumes:
      - '/var/run/docker.sock:/var/run/docker.sock'
      - 'portainer_data:/data'
    #  - '~/local-certs:/certs'
    environment:
      - VIRTUAL_HOST=${PORTAINER_VIRTUAL_HOST}
      - VIRTUAL_PORT=9000
    #command:
    #  --ssl
    #  --sslcert /certs/portainer.crt
    #  --sslkey /certs/portainer.key
    #  -H unix:///var/run/docker.sock
    restart: always

  iptv-services:
    container_name: 'IPTV-Services'
    build:
      context: 'https://raw.githubusercontent.com/Losenmann/scripts/master/Docker/iptv.dockerfile'
    network_mode: 'host'
    expose:
      - '4023'
    restart: always

  homeassistant:
    container_name: 'Home-Assistant'
    image: 'ghcr.io/home-assistant/home-assistant:stable'
#    build:
#      context: 'https://raw.githubusercontent.com/Losenmann/scripts/master/Docker/homeassistant.dockerfile'
    networks:
      - 'net-proxy'
    expose:
      - '8123'
    environment:
      - VIRTUAL_HOST=${HASS_VIRTUAL_HOST}
      - VIRTUAL_PORT=8123
    volumes:
#     - '/PATH_TO_YOUR_CONFIG:/config'
      - '/etc/localtime:/etc/localtime:ro'
    privileged: true
    restart: unless-stopped

volumes:
  portainer_data:
