version: '3.7'
networks:
  net-proxy:
    name: 'net-proxy'
    driver: 'bridge'
  net-zabbix:
    name: 'net-zabbix'
    driver: 'bridge'
    ipam:
      config:
        - subnet: '172.18.1.0/16'
          gateway: '172.18.1.1'

services:
  nginx-proxy:
    container_name: 'nginx-proxy'
    image: 'jwilder/nginx-proxy'
    networks:
      - 'net-proxy'
    ports:
    #  - '80:80'
      - '443:443'
    volumes:
      - '/var/run/docker.sock:/tmp/docker.sock:ro'
      - '~/local-certs:/etc/nginx/certs'
    restart: always

  portainer:
    container_name: 'Portainer'
    image: 'portainer/portainer-ce'
    networks:
      - 'net-proxy'
    expose:
      - '9000'
    volumes:
      - '/var/run/docker.sock:/var/run/docker.sock'
      - 'portainer_data:/data'
    #  - '~/local-certs:/certs'
    environment:
      - VIRTUAL_HOST=${PORTAINER_VIRTUAL_HOST}
      - VIRTUAL_PORT=9000
    #command:
    #  --ssl
    #  --sslcert /certs/portainer.crt
    #  --sslkey /certs/portainer.key
    #  -H unix:///var/run/docker.sock
    restart: always

  mysql-server:
    container_name: 'MariaDB'
    image: 'mariadb:latest'
    networks:
      net-proxy:
      net-zabbix:
        ipv4_address: 172.18.0.3
    ports:
      - '3306:3306'
    environment:
      - MYSQL_ROOT_PASSWORD=${MYSQL_ROOT_PASS}
      - MYSQL_DATABASE=${MYSQL_DB_ZBX}
      - MYSQL_USER=${MYSQL_USER_ZBX}
      - MYSQL_PASSWORD=${MYSQL_PASS_ZBX}
    command: ['mysqld', '--character-set-server=utf8', '--collation-server=utf8_bin']
    restart: always
    healthcheck:
      test: mysqladmin -proot_pwd ping -h localhost
      interval: 30s
      timeout: 10s
      retries: 3
      start_period: 10s

  zabbix-server-mysql:
    container_name: "Zabbix-Server"
    image: 'zabbix/zabbix-server-mysql:latest'
    networks:
      net-proxy:
      net-zabbix:
        ipv4_address: 172.18.0.4
    ports:
      - '10051:10051'
    environment:
      - DB_SERVER_HOST=mysql-server
      - MYSQL_DATABASE=${MYSQL_DB_ZBX}
      - MYSQL_USER=${MYSQL_USER_ZBX}
      - MYSQL_PASSWORD=${MYSQL_PASS_ZBX}
      - MYSQL_ROOT_PASSWORD=${MYSQL_ROOT_PASS}
    links:
      - mysql-server
    depends_on:
      mysql-server:
        condition: service_healthy
    restart: always

  zabbix-web-nginx-mysql:
    container_name: 'Zabbix-Frontend'
    image: 'zabbix/zabbix-web-nginx-mysql:latest'
    networks:
      net-proxy:
      net-zabbix:
        ipv4_address: 172.18.0.5
    expose:
      - '8080'
    environment:
      - VIRTUAL_HOST=${VIRTUAL_HOST_ZBX}
      - VIRTUAL_PORT=8080
      - DB_SERVER_HOST=mysql-server
      - MYSQL_DATABASE=${MYSQL_DB_ZBX}
      - MYSQL_USER=${MYSQL_USER_ZBX}
      - MYSQL_PASSWORD=${MYSQL_PASS_ZBX}
      - MYSQL_ROOT_PASSWORD=${MYSQL_ROOT_PASS}
      - PHP_TZ=Asia/Krasnoyarsk
      - ZBX_SERVER_NAME=Zabbix Docker
      - ZBX_SERVER_HOST=172.18.0.4
    links:
      - mysql-server:mysql
      - zabbix-server-mysql:zabbix-server
    depends_on:
      mysql-server:
        condition: service_healthy
    restart: always

  iptv-services:
    container_name: 'IPTV-Services'
    build:
      context: 'https://raw.githubusercontent.com/Losenmann/scripts/master/Docker/iptv.dockerfile'
    network_mode: 'host'
    expose:
      - '4023'
    restart: always

  homeassistant:
    container_name: 'Home-Assistant'
#    image: 'ghcr.io/home-assistant/home-assistant:stable'
    build:
      context: 'https://raw.githubusercontent.com/Losenmann/scripts/master/Docker/homeassistant.dockerfile'
    networks:
      - 'net-proxy'
    expose:
      - '8123'
    environment:
      - VIRTUAL_HOST=${VIRTUAL_HOST_HASS}
      - VIRTUAL_PORT=8123
    volumes:
#      - '/PATH_TO_YOUR_CONFIG:/config'
      - '/etc/localtime:/etc/localtime:ro'
    privileged: true
    restart: unless-stopped

volumes:
  portainer_data:
